{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww15880\viewh13240\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
        # # print("succGameState:", successorGameState) #undigested nonsense\
        # print("Walls:", successorGameState.getWalls()) #boolean grid\
        # print("PacmanPosition:", newPos) #(1, 6)\
        # print("Food:", newFood) #boolean grid\
        #\
        # print("GhostStates:", newGhostStates[0].getPosition()) #GhostStates[0].getPosition(): (2.0, 2.0)\
        # #prints a list of ghostStates, list size = numGhosts!\
        # print("ScaredTimes:", newScaredTimes) #ScaredTimes: [0, 0]\
        # #Remember that newFood has the function asList()\
        # print("Food as list:", newFood.asList()) #list of tuples\
        # print("Food Size:", len(newFood.asList()))\
\
\
\
\
*** FAIL: test_cases/q2/7-2b-check-depth-two-ghosts.test\
***     Incorrect move for depth=2\
***         Student move: Left\
***         Optimal move: Center\
***     Incorrect generated nodes for depth=2\
***         Student generated nodes: a b1 b2 b3 c1 c2 c3 d1 d2 d3\
***         Correct generated nodes: a b1 b2 b3 c1 c2 c3 d1 d2 d3 e1 e2 e3 f1 f2 f3 g1 g2 g3}